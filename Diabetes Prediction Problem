{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"1. Unndertand the Problem\n2. Understandung the Data\n3. Getting System Ready\n4. Data Eyeballing\n5. Data Cleaning and Preprocessing (Not Required)\n6. Model Building\n7. Model Evaluation\n8. Model Comparison\n9. Model Deployment(not covered)","metadata":{}},{"cell_type":"code","source":"# Getting System Ready\n\nimport numpy as np\nimport pandas as pd","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:40:50.248923Z","iopub.execute_input":"2024-06-19T09:40:50.249459Z","iopub.status.idle":"2024-06-19T09:40:51.460419Z","shell.execute_reply.started":"2024-06-19T09:40:50.249421Z","shell.execute_reply":"2024-06-19T09:40:51.459072Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"# DataFrame Creation from Dataset link\n\nfrom six.moves import urllib","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:41:30.877838Z","iopub.execute_input":"2024-06-19T09:41:30.878313Z","iopub.status.idle":"2024-06-19T09:41:30.884467Z","shell.execute_reply.started":"2024-06-19T09:41:30.878279Z","shell.execute_reply":"2024-06-19T09:41:30.883088Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"import os\n\ndownload_dir = \"./Datasets/\"\n\ndownload_url = \"https://raw.githubusercontent.com/manishkr1754/30_Days_30_ML_Projects_Challenge/main/Datasets/Day2_Diabetes_Data.csv\"\n\nos.makedirs(download_dir, exist_ok=True)\n\nfilename = os.path.basename(download_url)\n\ndownload_file_path = os.path.join(download_dir, filename)\n\nurllib.request.urlretrieve(download_url, download_file_path)\n\nprint('-'*100)\nprint(\"Data with name \" + filename + \" Downloaded at \" + download_file_path)\nprint('-'*100)\n\ndf = pd.read_csv(download_file_path)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:48:26.638751Z","iopub.execute_input":"2024-06-19T09:48:26.639207Z","iopub.status.idle":"2024-06-19T09:48:26.699802Z","shell.execute_reply.started":"2024-06-19T09:48:26.639175Z","shell.execute_reply":"2024-06-19T09:48:26.698596Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"----------------------------------------------------------------------------------------------------\nData with name Day2_Diabetes_Data.csv Downloaded at ./Datasets/Day2_Diabetes_Data.csv\n----------------------------------------------------------------------------------------------------\n","output_type":"stream"}]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:48:55.545649Z","iopub.execute_input":"2024-06-19T09:48:55.546244Z","iopub.status.idle":"2024-06-19T09:48:55.573814Z","shell.execute_reply.started":"2024-06-19T09:48:55.546199Z","shell.execute_reply":"2024-06-19T09:48:55.572274Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n0              6      148             72             35        0  33.6   \n1              1       85             66             29        0  26.6   \n2              8      183             64              0        0  23.3   \n3              1       89             66             23       94  28.1   \n4              0      137             40             35      168  43.1   \n..           ...      ...            ...            ...      ...   ...   \n763           10      101             76             48      180  32.9   \n764            2      122             70             27        0  36.8   \n765            5      121             72             23      112  26.2   \n766            1      126             60              0        0  30.1   \n767            1       93             70             31        0  30.4   \n\n     DiabetesPedigreeFunction  Age  Outcome  \n0                       0.627   50        1  \n1                       0.351   31        0  \n2                       0.672   32        1  \n3                       0.167   21        0  \n4                       2.288   33        1  \n..                        ...  ...      ...  \n763                     0.171   63        0  \n764                     0.340   27        0  \n765                     0.245   30        0  \n766                     0.349   47        1  \n767                     0.315   23        0  \n\n[768 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n      <th>Outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>148</td>\n      <td>72</td>\n      <td>35</td>\n      <td>0</td>\n      <td>33.6</td>\n      <td>0.627</td>\n      <td>50</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>85</td>\n      <td>66</td>\n      <td>29</td>\n      <td>0</td>\n      <td>26.6</td>\n      <td>0.351</td>\n      <td>31</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>183</td>\n      <td>64</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.3</td>\n      <td>0.672</td>\n      <td>32</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>89</td>\n      <td>66</td>\n      <td>23</td>\n      <td>94</td>\n      <td>28.1</td>\n      <td>0.167</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>137</td>\n      <td>40</td>\n      <td>35</td>\n      <td>168</td>\n      <td>43.1</td>\n      <td>2.288</td>\n      <td>33</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>763</th>\n      <td>10</td>\n      <td>101</td>\n      <td>76</td>\n      <td>48</td>\n      <td>180</td>\n      <td>32.9</td>\n      <td>0.171</td>\n      <td>63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>764</th>\n      <td>2</td>\n      <td>122</td>\n      <td>70</td>\n      <td>27</td>\n      <td>0</td>\n      <td>36.8</td>\n      <td>0.340</td>\n      <td>27</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>765</th>\n      <td>5</td>\n      <td>121</td>\n      <td>72</td>\n      <td>23</td>\n      <td>112</td>\n      <td>26.2</td>\n      <td>0.245</td>\n      <td>30</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>766</th>\n      <td>1</td>\n      <td>126</td>\n      <td>60</td>\n      <td>0</td>\n      <td>0</td>\n      <td>30.1</td>\n      <td>0.349</td>\n      <td>47</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>767</th>\n      <td>1</td>\n      <td>93</td>\n      <td>70</td>\n      <td>31</td>\n      <td>0</td>\n      <td>30.4</td>\n      <td>0.315</td>\n      <td>23</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>768 rows Ã— 9 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:50:48.979521Z","iopub.execute_input":"2024-06-19T09:50:48.980015Z","iopub.status.idle":"2024-06-19T09:50:48.988511Z","shell.execute_reply.started":"2024-06-19T09:50:48.979968Z","shell.execute_reply":"2024-06-19T09:50:48.987212Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"(768, 9)"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:51:02.806226Z","iopub.execute_input":"2024-06-19T09:51:02.806630Z","iopub.status.idle":"2024-06-19T09:51:02.828004Z","shell.execute_reply.started":"2024-06-19T09:51:02.806598Z","shell.execute_reply":"2024-06-19T09:51:02.826784Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 768 entries, 0 to 767\nData columns (total 9 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   Pregnancies               768 non-null    int64  \n 1   Glucose                   768 non-null    int64  \n 2   BloodPressure             768 non-null    int64  \n 3   SkinThickness             768 non-null    int64  \n 4   Insulin                   768 non-null    int64  \n 5   BMI                       768 non-null    float64\n 6   DiabetesPedigreeFunction  768 non-null    float64\n 7   Age                       768 non-null    int64  \n 8   Outcome                   768 non-null    int64  \ndtypes: float64(2), int64(7)\nmemory usage: 54.1 KB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:52:28.357586Z","iopub.execute_input":"2024-06-19T09:52:28.358034Z","iopub.status.idle":"2024-06-19T09:52:28.368708Z","shell.execute_reply.started":"2024-06-19T09:52:28.358000Z","shell.execute_reply":"2024-06-19T09:52:28.367412Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"Pregnancies                 0\nGlucose                     0\nBloodPressure               0\nSkinThickness               0\nInsulin                     0\nBMI                         0\nDiabetesPedigreeFunction    0\nAge                         0\nOutcome                     0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Outcome'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T09:53:15.267889Z","iopub.execute_input":"2024-06-19T09:53:15.268266Z","iopub.status.idle":"2024-06-19T09:53:15.279807Z","shell.execute_reply.started":"2024-06-19T09:53:15.268238Z","shell.execute_reply":"2024-06-19T09:53:15.278530Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"Outcome\n0    500\n1    268\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Model Building\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:05:26.022416Z","iopub.execute_input":"2024-06-19T10:05:26.022810Z","iopub.status.idle":"2024-06-19T10:05:26.149283Z","shell.execute_reply.started":"2024-06-19T10:05:26.022781Z","shell.execute_reply":"2024-06-19T10:05:26.147927Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"# Creating Feature Matrix\n\nX = df.drop(columns ='Outcome', axis=1)\ny = df['Outcome'] # Target Variable","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:56.998132Z","iopub.execute_input":"2024-06-19T10:14:56.998527Z","iopub.status.idle":"2024-06-19T10:14:57.008696Z","shell.execute_reply.started":"2024-06-19T10:14:56.998498Z","shell.execute_reply":"2024-06-19T10:14:57.007159Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:57.767436Z","iopub.execute_input":"2024-06-19T10:14:57.768922Z","iopub.status.idle":"2024-06-19T10:14:57.791520Z","shell.execute_reply.started":"2024-06-19T10:14:57.768878Z","shell.execute_reply":"2024-06-19T10:14:57.790202Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n0              6      148             72             35        0  33.6   \n1              1       85             66             29        0  26.6   \n2              8      183             64              0        0  23.3   \n3              1       89             66             23       94  28.1   \n4              0      137             40             35      168  43.1   \n..           ...      ...            ...            ...      ...   ...   \n763           10      101             76             48      180  32.9   \n764            2      122             70             27        0  36.8   \n765            5      121             72             23      112  26.2   \n766            1      126             60              0        0  30.1   \n767            1       93             70             31        0  30.4   \n\n     DiabetesPedigreeFunction  Age  \n0                       0.627   50  \n1                       0.351   31  \n2                       0.672   32  \n3                       0.167   21  \n4                       2.288   33  \n..                        ...  ...  \n763                     0.171   63  \n764                     0.340   27  \n765                     0.245   30  \n766                     0.349   47  \n767                     0.315   23  \n\n[768 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>148</td>\n      <td>72</td>\n      <td>35</td>\n      <td>0</td>\n      <td>33.6</td>\n      <td>0.627</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>85</td>\n      <td>66</td>\n      <td>29</td>\n      <td>0</td>\n      <td>26.6</td>\n      <td>0.351</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>183</td>\n      <td>64</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.3</td>\n      <td>0.672</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>89</td>\n      <td>66</td>\n      <td>23</td>\n      <td>94</td>\n      <td>28.1</td>\n      <td>0.167</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>137</td>\n      <td>40</td>\n      <td>35</td>\n      <td>168</td>\n      <td>43.1</td>\n      <td>2.288</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>763</th>\n      <td>10</td>\n      <td>101</td>\n      <td>76</td>\n      <td>48</td>\n      <td>180</td>\n      <td>32.9</td>\n      <td>0.171</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>764</th>\n      <td>2</td>\n      <td>122</td>\n      <td>70</td>\n      <td>27</td>\n      <td>0</td>\n      <td>36.8</td>\n      <td>0.340</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>765</th>\n      <td>5</td>\n      <td>121</td>\n      <td>72</td>\n      <td>23</td>\n      <td>112</td>\n      <td>26.2</td>\n      <td>0.245</td>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>766</th>\n      <td>1</td>\n      <td>126</td>\n      <td>60</td>\n      <td>0</td>\n      <td>0</td>\n      <td>30.1</td>\n      <td>0.349</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>767</th>\n      <td>1</td>\n      <td>93</td>\n      <td>70</td>\n      <td>31</td>\n      <td>0</td>\n      <td>30.4</td>\n      <td>0.315</td>\n      <td>23</td>\n    </tr>\n  </tbody>\n</table>\n<p>768 rows Ã— 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:58.437773Z","iopub.execute_input":"2024-06-19T10:14:58.438278Z","iopub.status.idle":"2024-06-19T10:14:58.449450Z","shell.execute_reply.started":"2024-06-19T10:14:58.438242Z","shell.execute_reply":"2024-06-19T10:14:58.447989Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"0      1\n1      0\n2      1\n3      0\n4      1\n      ..\n763    0\n764    0\n765    0\n766    1\n767    0\nName: Outcome, Length: 768, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Data Standardization\n\nscaler = StandardScaler()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:59.073732Z","iopub.execute_input":"2024-06-19T10:14:59.074245Z","iopub.status.idle":"2024-06-19T10:14:59.081343Z","shell.execute_reply.started":"2024-06-19T10:14:59.074209Z","shell.execute_reply":"2024-06-19T10:14:59.079753Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"code","source":"scaler.fit(X)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:59.745193Z","iopub.execute_input":"2024-06-19T10:14:59.746598Z","iopub.status.idle":"2024-06-19T10:14:59.759587Z","shell.execute_reply.started":"2024-06-19T10:14:59.746544Z","shell.execute_reply":"2024-06-19T10:14:59.757977Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"StandardScaler()","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>StandardScaler()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"standardized_data = scaler.transform(X)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:14:59.964287Z","iopub.execute_input":"2024-06-19T10:14:59.964790Z","iopub.status.idle":"2024-06-19T10:14:59.973906Z","shell.execute_reply.started":"2024-06-19T10:14:59.964746Z","shell.execute_reply":"2024-06-19T10:14:59.972557Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"code","source":"standardized_data","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:00.218926Z","iopub.execute_input":"2024-06-19T10:15:00.219405Z","iopub.status.idle":"2024-06-19T10:15:00.228979Z","shell.execute_reply.started":"2024-06-19T10:15:00.219372Z","shell.execute_reply":"2024-06-19T10:15:00.227407Z"},"trusted":true},"execution_count":53,"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"array([[ 0.63994726,  0.84832379,  0.14964075, ...,  0.20401277,\n         0.46849198,  1.4259954 ],\n       [-0.84488505, -1.12339636, -0.16054575, ..., -0.68442195,\n        -0.36506078, -0.19067191],\n       [ 1.23388019,  1.94372388, -0.26394125, ..., -1.10325546,\n         0.60439732, -0.10558415],\n       ...,\n       [ 0.3429808 ,  0.00330087,  0.14964075, ..., -0.73518964,\n        -0.68519336, -0.27575966],\n       [-0.84488505,  0.1597866 , -0.47073225, ..., -0.24020459,\n        -0.37110101,  1.17073215],\n       [-0.84488505, -0.8730192 ,  0.04624525, ..., -0.20212881,\n        -0.47378505, -0.87137393]])"},"metadata":{}}]},{"cell_type":"code","source":"X = standardized_data","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:00.648072Z","iopub.execute_input":"2024-06-19T10:15:00.648490Z","iopub.status.idle":"2024-06-19T10:15:00.655454Z","shell.execute_reply.started":"2024-06-19T10:15:00.648457Z","shell.execute_reply":"2024-06-19T10:15:00.653675Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:01.360891Z","iopub.execute_input":"2024-06-19T10:15:01.361333Z","iopub.status.idle":"2024-06-19T10:15:01.371511Z","shell.execute_reply.started":"2024-06-19T10:15:01.361291Z","shell.execute_reply":"2024-06-19T10:15:01.369920Z"},"trusted":true},"execution_count":55,"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"array([[ 0.63994726,  0.84832379,  0.14964075, ...,  0.20401277,\n         0.46849198,  1.4259954 ],\n       [-0.84488505, -1.12339636, -0.16054575, ..., -0.68442195,\n        -0.36506078, -0.19067191],\n       [ 1.23388019,  1.94372388, -0.26394125, ..., -1.10325546,\n         0.60439732, -0.10558415],\n       ...,\n       [ 0.3429808 ,  0.00330087,  0.14964075, ..., -0.73518964,\n        -0.68519336, -0.27575966],\n       [-0.84488505,  0.1597866 , -0.47073225, ..., -0.24020459,\n        -0.37110101,  1.17073215],\n       [-0.84488505, -0.8730192 ,  0.04624525, ..., -0.20212881,\n        -0.47378505, -0.87137393]])"},"metadata":{}}]},{"cell_type":"code","source":"# Train Test Split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, stratify=y, random_state=15)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:02.041426Z","iopub.execute_input":"2024-06-19T10:15:02.041824Z","iopub.status.idle":"2024-06-19T10:15:02.052902Z","shell.execute_reply.started":"2024-06-19T10:15:02.041793Z","shell.execute_reply":"2024-06-19T10:15:02.051490Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"X.shape, X_train.shape, X_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:02.574734Z","iopub.execute_input":"2024-06-19T10:15:02.575727Z","iopub.status.idle":"2024-06-19T10:15:02.586575Z","shell.execute_reply.started":"2024-06-19T10:15:02.575681Z","shell.execute_reply":"2024-06-19T10:15:02.584980Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"((768, 8), (614, 8), (154, 8))"},"metadata":{}}]},{"cell_type":"code","source":"y.shape, y_train.shape, y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:03.130442Z","iopub.execute_input":"2024-06-19T10:15:03.131350Z","iopub.status.idle":"2024-06-19T10:15:03.143633Z","shell.execute_reply.started":"2024-06-19T10:15:03.131306Z","shell.execute_reply":"2024-06-19T10:15:03.141536Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"((768,), (614,), (154,))"},"metadata":{}}]},{"cell_type":"code","source":"models = [LogisticRegression, DecisionTreeClassifier]\n\naccuracy_score =[]\nprecision_score =[]\nrecall_score = []\nf1_score =[]\n\nfor model in models:\n    classifier = model().fit(X_train, y_train)\n    y_pred = classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:03.818826Z","iopub.execute_input":"2024-06-19T10:15:03.819281Z","iopub.status.idle":"2024-06-19T10:15:03.838991Z","shell.execute_reply.started":"2024-06-19T10:15:03.819228Z","shell.execute_reply":"2024-06-19T10:15:03.837526Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"accuracy_score(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:05.377576Z","iopub.execute_input":"2024-06-19T10:15:05.377970Z","iopub.status.idle":"2024-06-19T10:15:05.419472Z","shell.execute_reply.started":"2024-06-19T10:15:05.377940Z","shell.execute_reply":"2024-06-19T10:15:05.417325Z"},"trusted":true},"execution_count":60,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[60], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43maccuracy_score\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: 'list' object is not callable"],"ename":"TypeError","evalue":"'list' object is not callable","output_type":"error"}]},{"cell_type":"code","source":"y_test","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:08.564155Z","iopub.execute_input":"2024-06-19T10:15:08.564651Z","iopub.status.idle":"2024-06-19T10:15:08.577793Z","shell.execute_reply.started":"2024-06-19T10:15:08.564615Z","shell.execute_reply":"2024-06-19T10:15:08.576139Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"511    0\n69     0\n87     0\n746    1\n665    0\n      ..\n183    0\n45     1\n550    0\n392    0\n698    0\nName: Outcome, Length: 154, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"y_test = np.array(y_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:15:42.397229Z","iopub.execute_input":"2024-06-19T10:15:42.397648Z","iopub.status.idle":"2024-06-19T10:15:42.403547Z","shell.execute_reply.started":"2024-06-19T10:15:42.397616Z","shell.execute_reply":"2024-06-19T10:15:42.402172Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"y_test","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:17:01.516085Z","iopub.execute_input":"2024-06-19T10:17:01.516486Z","iopub.status.idle":"2024-06-19T10:17:01.526561Z","shell.execute_reply.started":"2024-06-19T10:17:01.516456Z","shell.execute_reply":"2024-06-19T10:17:01.524864Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n       0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0])"},"metadata":{}}]},{"cell_type":"code","source":"y_pred","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:17:02.445561Z","iopub.execute_input":"2024-06-19T10:17:02.446032Z","iopub.status.idle":"2024-06-19T10:17:02.455598Z","shell.execute_reply.started":"2024-06-19T10:17:02.445999Z","shell.execute_reply":"2024-06-19T10:17:02.453590Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n       0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n       1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0])"},"metadata":{}}]},{"cell_type":"code","source":"accuracy_score(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T10:17:14.921203Z","iopub.execute_input":"2024-06-19T10:17:14.921704Z","iopub.status.idle":"2024-06-19T10:17:14.968237Z","shell.execute_reply.started":"2024-06-19T10:17:14.921667Z","shell.execute_reply":"2024-06-19T10:17:14.966468Z"},"trusted":true},"execution_count":72,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[72], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43maccuracy_score\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: 'list' object is not callable"],"ename":"TypeError","evalue":"'list' object is not callable","output_type":"error"}]}]}